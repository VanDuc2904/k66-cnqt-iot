<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>TLD-66 Data Analytics Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <style>
    body { font-family:sans-serif; background:#f4f7fa }
    .container { max-width:1200px; margin:30px auto }
    .stat-card, .chart-container, .table-wrapper { background:#fff; border-radius:12px; box-shadow:0 4px 15px rgba(0,0,0,0.1); margin-bottom:20px; padding:20px }
    .chart-container { margin-top:30px }
    .update-notify {
      position:fixed; bottom:20px; right:20px;
      background:#28a745; color:#fff; padding:10px 15px; border-radius:5px;
      animation:slideIn .5s forwards
    }
    @keyframes slideIn { from{opacity:0;transform:translateX(100%)}to{opacity:1;transform:translateX(0)}}
  </style>
</head>
<body>
  <div class="container">
    <div class="text-center mb-4">
      <img src="img/Logo1.png" alt="Logo" style="max-height:70px">
      <h1 class="mt-2">TLD66 Data Analytics Dashboard</h1>
      <p>Dữ liệu cập nhật tự động mỗi 60s</p>
      <button id="exportPDF" class="btn btn-success">Export as PDF</button>
    </div>

    <!-- Stat cards -->
    <div class="row">
      <div class="col-md-4"><div class="stat-card">
        <h5>Temperature (°C)</h5>
        <p>Avg: <span id="tempAvg">0</span></p>
        <p>Max: <span id="tempMax">0</span></p>
        <p>Min: <span id="tempMin">0</span></p>
        <p>StdDev: <span id="tempStdDev">0</span></p>
      </div></div>
      <div class="col-md-4"><div class="stat-card">
        <h5>Humidity (%)</h5>
        <p>Avg: <span id="humAvg">0</span></p>
        <p>Max: <span id="humMax">0</span></p>
        <p>Min: <span id="humMin">0</span></p>
        <p>StdDev: <span id="humStdDev">0</span></p>
      </div></div>
      <div class="col-md-4"><div class="stat-card">
        <h5>CO (ppm)</h5>
        <p>Avg: <span id="coAvg">0</span></p>
        <p>Max: <span id="coMax">0</span></p>
        <p>Min: <span id="coMin">0</span></p>
        <p>StdDev: <span id="coStdDev">0</span></p>
      </div></div>
      <div class="col-md-4"><div class="stat-card">
        <h5>PM2.5 (µg/m³)</h5>
        <p>Avg: <span id="pm25Avg">0</span></p>
        <p>Max: <span id="pm25Max">0</span></p>
        <p>Min: <span id="pm25Min">0</span></p>
        <p>StdDev: <span id="pm25StdDev">0</span></p>
      </div></div>
      <div class="col-md-4"><div class="stat-card">
        <h5>PM10 (µg/m³)</h5>
        <p>Avg: <span id="pm10Avg">0</span></p>
        <p>Max: <span id="pm10Max">0</span></p>
        <p>Min: <span id="pm10Min">0</span></p>
        <p>StdDev: <span id="pm10StdDev">0</span></p>
      </div></div>
      <div class="col-md-4"><div class="stat-card">
        <h5>CO₂ (ppm)</h5>
        <p>Avg: <span id="co2Avg">0</span></p>
        <p>Max: <span id="co2Max">0</span></p>
        <p>Min: <span id="co2Min">0</span></p>
        <p>StdDev: <span id="co2StdDev">0</span></p>
      </div></div>
    </div>

    <!-- Data table -->
    <div class="table-wrapper">
      <table class="table table-striped mb-0">
        <thead class="table-dark">
          <tr>
            <th>No</th><th>Ngày</th><th>Giờ</th>
            <th>Temp (°C)</th><th>Hum (%)</th><th>CO</th>
            <th>PM2.5</th><th>PM10</th><th>CO₂</th>
          </tr>
        </thead>
        <tbody id="data-table"></tbody>
      </table>
      <p id="error-message" class="text-center text-danger mt-2"></p>
    </div>

    <!-- Charts -->
    <div class="chart-container">
      <h5>Visualization (Last 12 records)</h5>
      <div class="row">
        <div class="col-md-6"><canvas id="chart-temp"></canvas></div>
        <div class="col-md-6"><canvas id="chart-hum"></canvas></div>
        <div class="col-md-6"><canvas id="chart-co"></canvas></div>
        <div class="col-md-6"><canvas id="chart-pm25"></canvas></div>
        <div class="col-md-6"><canvas id="chart-pm10"></canvas></div>
        <div class="col-md-6"><canvas id="chart-co2"></canvas></div>
      </div>
    </div>
  </div>

  <script>
    const sheetId = '1oOeN-HUb_xZfcIiY0d06MXUGL0-vsJW5r-zNa_NIKe4';
    const apiKey  = 'AIzaSyAFLByP7yNm_HMSO8sTyWjAXxwVrcXNoXw';
    let originalData = [];
    let charts = {};

    async function fetchData() {
      const range = 'Sheet1!A:I';
      const url   = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${encodeURIComponent(range)}?key=${apiKey}`;
      try {
        const res  = await fetch(url);
        const json = await res.json();
        if (!json.values) throw new Error('Không có dữ liệu');
        const rows = json.values.slice(1);          // bỏ header
        originalData = rows;
        const last12  = rows.slice(-12);
        renderTable(last12);
        renderStats(last12);
        renderCharts(last12);
        notifyUpdate();
      } catch(err) {
        console.error(err);
        document.getElementById('error-message').textContent = 'Không thể tải dữ liệu.';
      }
    }

    function renderTable(data) {
      const tbody = document.getElementById('data-table');
      tbody.innerHTML = '';
      data.forEach((r,i) => {
        const [ts, date, time, temp, hum, co, pm25, pm10, co2] = r;
        tbody.insertAdjacentHTML('beforeend', `
          <tr>
            <td>${i+1}</td>
            <td>${date || 'N/A'}</td>
            <td>${time || 'N/A'}</td>
            <td>${temp  || 'N/A'}</td>
            <td>${hum   || 'N/A'}</td>
            <td>${co    || 'N/A'}</td>
            <td>${pm25  || 'N/A'}</td>
            <td>${pm10  || 'N/A'}</td>
            <td>${co2   || 'N/A'}</td>
          </tr>
        `);
      });
    }

    function renderStats(data) {
      const toNum = idx => data.map(r=>parseFloat(r[idx])).filter(v=>!isNaN(v));
      const calc  = arr => ({ avg:arr.reduce((s,v)=>s+v,0)/arr.length || 0,
                              max:Math.max(...arr).toFixed(2),
                              min:Math.min(...arr).toFixed(2),
                              std:Math.sqrt(arr.map(v=>Math.pow(v-(arr.reduce((s,v)=>s+v,0)/arr.length),2))
                                .reduce((s,v)=>s+v,0)/arr.length||0).toFixed(2)
                            });
      const stats = {
        temp:  calc(toNum(3)),
        hum:   calc(toNum(4)),
        co:    calc(toNum(5)),
        pm25:  calc(toNum(6)),
        pm10:  calc(toNum(7)),
        co2:   calc(toNum(8))
      };
      document.getElementById('tempAvg').textContent = stats.temp.avg.toFixed(2);
      document.getElementById('tempMax').textContent = stats.temp.max;
      document.getElementById('tempMin').textContent = stats.temp.min;
      document.getElementById('tempStdDev').textContent = stats.temp.std;

      document.getElementById('humAvg').textContent  = stats.hum.avg.toFixed(2);
      document.getElementById('humMax').textContent  = stats.hum.max;
      document.getElementById('humMin').textContent  = stats.hum.min;
      document.getElementById('humStdDev').textContent = stats.hum.std;

      document.getElementById('coAvg').textContent   = stats.co.avg.toFixed(2);
      document.getElementById('coMax').textContent   = stats.co.max;
      document.getElementById('coMin').textContent   = stats.co.min;
      document.getElementById('coStdDev').textContent = stats.co.std;

      document.getElementById('pm25Avg').textContent = stats.pm25.avg.toFixed(2);
      document.getElementById('pm25Max').textContent = stats.pm25.max;
      document.getElementById('pm25Min').textContent = stats.pm25.min;
      document.getElementById('pm25StdDev').textContent = stats.pm25.std;

      document.getElementById('pm10Avg').textContent = stats.pm10.avg.toFixed(2);
      document.getElementById('pm10Max').textContent = stats.pm10.max;
      document.getElementById('pm10Min').textContent = stats.pm10.min;
      document.getElementById('pm10StdDev').textContent = stats.pm10.std;

      document.getElementById('co2Avg').textContent  = stats.co2.avg.toFixed(2);
      document.getElementById('co2Max').textContent  = stats.co2.max;
      document.getElementById('co2Min').textContent  = stats.co2.min;
      document.getElementById('co2StdDev').textContent = stats.co2.std;
    }

    function renderCharts(data) {
      const labels = data.map(r=>`${r[1]} ${r[2]}`);
      const mapDs  = idx => data.map(r=>parseFloat(r[idx])).filter(v=>!isNaN(v));
      const items = [
        { id:'chart-temp', label:'Temp (°C)', ds:mapDs(3) },
        { id:'chart-hum',  label:'Hum (%)',   ds:mapDs(4) },
        { id:'chart-co',   label:'CO',        ds:mapDs(5) },
        { id:'chart-pm25', label:'PM2.5',     ds:mapDs(6) },
        { id:'chart-pm10', label:'PM10',      ds:mapDs(7) },
        { id:'chart-co2',  label:'CO₂',       ds:mapDs(8) }
      ];
      items.forEach(o=>{
        if (charts[o.id]) charts[o.id].destroy();
        charts[o.id] = new Chart(
          document.getElementById(o.id), {
            type:'line',
            data:{ labels, datasets:[{ label:o.label, data:o.ds, fill:false, tension:0.3 }]},
            options:{ responsive:true, scales:{ x:{}, y:{ beginAtZero:false } } }
          }
        );
      });
    }

    function notifyUpdate(){
      const d = document.createElement('div');
      d.className = 'update-notify';
      d.textContent = 'Dữ liệu đã được cập nhật!';
      document.body.appendChild(d);
      setTimeout(()=>d.remove(),3000);
    }

    document.addEventListener('DOMContentLoaded',()=>{
      // lần đầu
      fetchData();
      // tái fetch mỗi 60s
      setInterval(fetchData,60000);
      // export PDF
      document.getElementById('exportPDF')
        .addEventListener('click',()=>{
          html2pdf().from(document.querySelector('.container'))
                   .toPdf().get('pdf').then(pdf=>pdf.save('report.pdf'));
        });
    });
  </script>
</body>
</html>
