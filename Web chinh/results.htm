<!DOCTYPE html>
<html lang="vi">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Thống kê dữ liệu</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .container {
            margin-top: 50px;
            max-width: 100%;
            padding: 15px;
        }

        h1 {
            color: #343a40;
            text-align: center;
            margin-bottom: 40px;
            text-transform: uppercase;
            font-weight: 700;
        }

        .table-wrapper {
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            background-color: #fff;
            padding: 20px;
            margin-bottom: 30px;
            overflow-x: auto;
        }

        .table thead {
            background-color: #343a40;
            color: #fff;
        }

        .table tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }

        .table tbody tr:hover {
            background-color: #e9ecef;
        }

        .chart-container {
            margin-top: 30px;
        }

        .chart-container canvas {
            max-width: 100%;
            height: 250px; /* Thay đổi chiều cao cho biểu đồ */
        }

        .stat-container {
            margin-bottom: 30px;
            background-color: #d4edda; /* Màu xanh lá nhạt */
            border-radius: 5px;
            padding: 15px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .stat-container h2 {
            font-size: 1.5rem;
            margin-bottom: 20px;
        }

        .list-group-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .list-group-item span {
            font-weight: bold;
        }
        .btn-export {
            background-color: #d4edda; /* Màu xanh lá nhạt */
            color: #343a40;
            border: none;
            padding: 10px 20px;
            font-size: 16px;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-export:hover {
            background-color: #c3e6cb; /* Màu xanh lá đậm hơn khi hover */
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Thống Kê Dữ Liệu</h1>
        <div class="text-center mb-4">
            <button id="exportPDF" class="btn btn-export">Xuất PDF</button>
        </div>
        <div class="text-center mb-4">
            <button onclick="window.location.href='data.htm';">
                Thống kê dữ liệu định hướng
            </button>
        </div>        
<div class="container">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
        <div class="table-wrapper">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Thời gian</th>
                        <th>Nhiệt độ (°C)</th>
                        <th>Độ ẩm (%)</th>
                        <th>CO (ppm)</th>
                        <th>PM2.5 (µg/m³)</th>
                    </tr>
                </thead>
                <tbody id="data-table">
                    <!-- Dữ liệu sẽ được chèn vào đây -->
                </tbody>
            </table>
        </div>

        <div class="row">
            <div class="col-md-6 stat-container">
                <h2>Nhiệt Độ</h2>
                <ul class="list-group">
                    <li class="list-group-item">Trung bình: <span id="tempAvg">0</span> °C</li>
                    <li class="list-group-item">Lớn nhất: <span id="tempMax">0</span> °C</li>
                    <li class="list-group-item">Nhỏ nhất: <span id="tempMin">0</span> °C</li>
                    <li class="list-group-item">Độ lệch chuẩn: <span id="tempStdDev">0</span> °C</li>
                </ul>
            </div>
            <div class="col-md-6 stat-container">
                <h2>Độ Ẩm</h2>
                <ul class="list-group">
                    <li class="list-group-item">Trung bình: <span id="humidityAvg">0</span> %</li>
                    <li class="list-group-item">Lớn nhất: <span id="humidityMax">0</span> %</li>
                    <li class="list-group-item">Nhỏ nhất: <span id="humidityMin">0</span> %</li>
                    <li class="list-group-item">Độ lệch chuẩn: <span id="humidityStdDev">0</span> %</li>
                </ul>
            </div>
            <div class="col-md-6 stat-container">
                <h2>Hàm lượng khí CO</h2>
                <ul class="list-group">
                    <li class="list-group-item">Trung bình: <span id="coAvg">0</span> ppm</li>
                    <li class="list-group-item">Lớn nhất: <span id="coMax">0</span> ppm</li>
                    <li class="list-group-item">Nhỏ nhất: <span id="coMin">0</span> ppm</li>
                    <li class="list-group-item">Độ lệch chuẩn: <span id="coStdDev">0</span> ppm</li>
                </ul>
            </div>
            <div class="col-md-6 stat-container">
                <h2>Hàm lượng bụi mịn PM2.5</h2>
                <ul class="list-group">
                    <li class="list-group-item">Trung bình: <span id="pm25Avg">0</span> µg/m³</li>
                    <li class="list-group-item">Lớn nhất: <span id="pm25Max">0</span> µg/m³</li>
                    <li class="list-group-item">Nhỏ nhất: <span id="pm25Min">0</span> µg/m³</li>
                    <li class="list-group-item">Độ lệch chuẩn: <span id="pm25StdDev">0</span> µg/m³</li>
                </ul>
            </div>
        </div>

        <div class="chart-container">
            <h2>Biểu Đồ</h2>
            <div class="row">
                <div class="col-md-6">
                    <canvas id="temperatureChart"></canvas>
                </div>
                <div class="col-md-6">
                    <canvas id="humidityChart"></canvas>
                </div>
                <div class="col-md-6">
                    <canvas id="coChart"></canvas>
                </div>
                <div class="col-md-6">
                    <canvas id="pm25Chart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
        const sheetId = '1oOeN-HUb_xZfcIiY0d06MXUGL0-vsJW5r-zNa_NIKe4';
        const apiKey = 'AIzaSyAFLByP7yNm_HMSO8sTyWjAXxwVrcXNoXw';

        async function fetchData() {
            const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/sheet_id?key=${apiKey}`;
        
            try {
                const response = await fetch(url);
                const data = await response.json();
        
                if (data && data.values) {
                    // Loại bỏ tiêu đề nếu có
                    const rows = data.values.slice(1); // Bỏ qua dòng đầu tiên nếu đó là tiêu đề
                    const last12Rows = rows.slice(-12); // Lấy 12 hàng cuối cùng
                    
                    displayData(last12Rows);
                    displayStatistics(last12Rows);
                    renderCharts(last12Rows);
                }
            } catch (error) {
                console.error('Lỗi khi tải dữ liệu:', error);
                document.getElementById('data-table').innerHTML = `<tr><td colspan="7" class="text-center text-danger">Không thể tải dữ liệu.</td></tr>`;
            }
        }
        
        function displayData(data) {
            const tableBody = document.getElementById('data-table');
            tableBody.innerHTML = '';
        
            data.forEach((row, index) => {
                // Kiểm tra và thay thế giá trị không hợp lệ bằng 'N/A'
                const temperature = isNaN(row[2]) ? 'N/A' : row[2];
                const humidity = isNaN(row[3]) ? 'N/A' : row[3];
                const coLevel = isNaN(row[4]) ? 'N/A' : row[4];
                const pm25Level = isNaN(row[5]) ? 'N/A' : row[5];
        
                const rowHTML = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${row[0]}</td>
                        <td>${temperature}</td>
                        <td>${humidity}</td>
                        <td>${coLevel}</td>
                        <td>${pm25Level}</td>
                    </tr>
                `;
                tableBody.insertAdjacentHTML('beforeend', rowHTML);
            });
        }
        
        function displayStatistics(data) {
            const temperatures = data.map(row => parseFloat(row[1])).filter(value => !isNaN(value));
            const humidities = data.map(row => parseFloat(row[2])).filter(value => !isNaN(value));
            const coLevels = data.map(row => parseFloat(row[3])).filter(value => !isNaN(value));
            const pm25Levels = data.map(row => parseFloat(row[4])).filter(value => !isNaN(value));
        
            document.getElementById('tempAvg').textContent = calculateAverage(temperatures).toFixed(2);
            document.getElementById('tempMax').textContent = Math.max(...temperatures).toFixed(2);
            document.getElementById('tempMin').textContent = Math.min(...temperatures).toFixed(2);
            document.getElementById('tempStdDev').textContent = calculateStandardDeviation(temperatures).toFixed(2);
        
            document.getElementById('humidityAvg').textContent = calculateAverage(humidities).toFixed(2);
            document.getElementById('humidityMax').textContent = Math.max(...humidities).toFixed(2);
            document.getElementById('humidityMin').textContent = Math.min(...humidities).toFixed(2);
            document.getElementById('humidityStdDev').textContent = calculateStandardDeviation(humidities).toFixed(2);
        
            document.getElementById('coAvg').textContent = calculateAverage(coLevels).toFixed(2);
            document.getElementById('coMax').textContent = Math.max(...coLevels).toFixed(2);
            document.getElementById('coMin').textContent = Math.min(...coLevels).toFixed(2);
            document.getElementById('coStdDev').textContent = calculateStandardDeviation(coLevels).toFixed(2);
        
            document.getElementById('pm25Avg').textContent = calculateAverage(pm25Levels).toFixed(2);
            document.getElementById('pm25Max').textContent = Math.max(...pm25Levels).toFixed(2);
            document.getElementById('pm25Min').textContent = Math.min(...pm25Levels).toFixed(2);
            document.getElementById('pm25StdDev').textContent = calculateStandardDeviation(pm25Levels).toFixed(2);
        }
        
        function calculateAverage(array) {
            if (array.length === 0) return 0;
            const total = array.reduce((sum, value) => sum + value, 0);
            return total / array.length;
        }
        
        function calculateStandardDeviation(array) {
            if (array.length === 0) return 0;
            const mean = calculateAverage(array);
            const squareDiffs = array.map(value => Math.pow(value - mean, 2));
            const avgSquareDiff = calculateAverage(squareDiffs);
            return Math.sqrt(avgSquareDiff);
        }
        
        function renderCharts(data) {
            const labels = data.map(row => row[0]); // Lấy thời gian từ dữ liệu
            const temperatures = data.map(row => parseFloat(row[1])).filter(value => !isNaN(value));
            const humidities = data.map(row => parseFloat(row[2])).filter(value => !isNaN(value));
            const coLevels = data.map(row => parseFloat(row[3])).filter(value => !isNaN(value));
            const pm25Levels = data.map(row => parseFloat(row[4])).filter(value => !isNaN(value));
        
            // Biểu đồ nhiệt độ
            new Chart(document.getElementById('temperatureChart').getContext('2d'), {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Nhiệt độ (°C)',
                        data: temperatures,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Thời gian'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Nhiệt độ (°C)'
                            }
                        }
                    }
                }
            });
        
            // Biểu đồ độ ẩm
            new Chart(document.getElementById('humidityChart').getContext('2d'), {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Độ ẩm (%)',
                        data: humidities,
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Thời gian'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Độ ẩm (%)'
                            }
                        }
                    }
                }
            });
        
            // Biểu đồ CO
            new Chart(document.getElementById('coChart').getContext('2d'), {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'CO (ppm)',
                        data: coLevels,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Thời gian'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'CO (ppm)'
                            }
                        }
                    }
                }
            });
        
            // Biểu đồ PM2.5
            new Chart(document.getElementById('pm25Chart').getContext('2d'), {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'PM2.5 (µg/m³)',
                        data: pm25Levels,
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        x: {
                            title: {
                                display: true,
                                text: 'Thời gian'
                            }
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'PM2.5 (µg/m³)'
                            }
                        }
                    }
                }
            });
        }
        
        document.addEventListener('DOMContentLoaded', () => {
            fetchData(); // Gọi hàm fetchData khi tải trang
            setInterval(fetchData, 3600000); // Gọi lại mỗi giờ
        });
        
        document.getElementById('exportPDF').addEventListener('click', () => {
            const element = document.querySelector('.container');
            const exportButton = document.getElementById('exportPDF');
        
            if (element) {
                // Ẩn nút xuất PDF
                exportButton.style.display = 'none';
        
                html2pdf().from(element).toPdf().get('pdf').then(function(pdf) {
                    pdf.save('thong_ke_du_lieu.pdf');
        
                    // Hiện lại nút xuất PDF sau khi xuất xong
                    exportButton.style.display = 'block';
                });
            } else {
                console.error('Phần tử không tồn tại');
            }
        });
        
        
    </script>
</body>

</html>
